@page
@using Microsoft.Extensions.Localization
@using Abp.Dns.Cloudflare.Localization
@using Volo.Abp.Features
@model Abp.Dns.Cloudflare.Web.Pages.Cloudflare.IndexModel
@inject IStringLocalizer<CloudflareResource> L
@inject IFeatureChecker FeatureChecker

@if(!User.Identity.IsAuthenticated)
{
    <abp-alert alert-type="Danger" >@L["NotAuthenticatedMessage"]</abp-alert>
}
else if (Model.IsFeatureEnabled == false)
{
    <abp-alert alert-type="Info" >@L["NotEnabledMessage"]</abp-alert>

}
else
{
    <div class="d-flex justify-content-end mb-5">
        <abp-button button-type="Primary" id="AddZoneCredentialBtn">Add Zone Credential</abp-button>
       
    </div>
   
    <abp-table hoverable-rows="true" responsive-sm="true">
        <thead>
        <tr>
            <th scope="Column">#</th>
            <th scope="Column">Tenant Id</th>
            <th scope="Column">Zone Id</th>
            <th scope="Column">Actions</th>
        </tr>
        
        </thead>
        <tbody>
        @foreach (var credential in Model.Credentials.Select((value, index) => new { value, index }))
        {
            <tr scope="row">
                <td class="align-middle">@(credential.index + 1)</td>
                @if(credential.value.TenantId != null)
                {
                    <td class="align-middle">@credential.value.TenantId </td>
                }
                else
                {
                    <td class="align-middle">N/A</td>
                }
                <td class="align-middle">@credential.value.ZoneId</td>
                <td>
                    <abp-dropdown>
                        <abp-dropdown-button button-type="Primary" text="Actions" />
                        <abp-dropdown-menu>
                            <abp-dropdown-item href=@($"/Cloudflare/Dns/Zone/{credential.value.ZoneId}")>Show Dns</abp-dropdown-item>
                            <abp-dropdown-item href="javascript:void(0)" onclick="onEditCredential('@credential.value.Id')">Edit</abp-dropdown-item>
                            <abp-dropdown-item href="#" onclick="onDeleteCredential('@credential.value.Id')">Delete</abp-dropdown-item>
                        </abp-dropdown-menu>
                    </abp-dropdown>
                </td>
            </tr>
        }
        </tbody>
    </abp-table>
    @if (Model.HidePager)
    {
        <abp-paginator model="Model.PagerModel" show-info="true"></abp-paginator>
    }
    

    <script>
         
        document.addEventListener("DOMContentLoaded", function () {
             const addCredentialModel = new abp.ModalManager({
                viewUrl: '/Cloudflare/Dns/CredentialModal?handler=Create',
            });
            document.getElementById('AddZoneCredentialBtn').addEventListener('click', function () {
                addCredentialModel.open();  
            });
            addCredentialModel.onResult(function () {
                console.log('Modal closed', arguments);
                location.reload();
            });
        });
        function onEditCredential(credentialId) {
           console.log('Edit button clicked', credentialId);
           const addCredentialModel = new abp.ModalManager({
                viewUrl: '/Cloudflare/Dns/CredentialModal?handler=Edit',
           });
           addCredentialModel.open({ credentialId });
           addCredentialModel.onResult(function () {
               console.log('Modal closed', arguments);
               location.reload();
            });
        }
        
        function onDeleteCredential(credentialId) {
            console.log('Delete button clicked', credentialId);
            const deleteCredentialModel = new abp.ModalManager({
                viewUrl: '/Cloudflare/Dns/DeleteCredentialModel',
            });
            deleteCredentialModel.open({ credentialId });
            deleteCredentialModel.onResult(function () {
                console.log('Modal closed', arguments);
                location.reload();
            });
        }
    </script>
}



