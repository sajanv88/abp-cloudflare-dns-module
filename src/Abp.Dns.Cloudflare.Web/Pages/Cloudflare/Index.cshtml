@page
@using Abp.Dns.Cloudflare.Dns
@using Microsoft.Extensions.Localization
@using Abp.Dns.Cloudflare.Localization
@using Volo.Abp.Features
@model Abp.Dns.Cloudflare.Web.Pages.Cloudflare.IndexModel
@inject IStringLocalizer<CloudflareResource> L
@inject IFeatureChecker FeatureChecker
@inject IDnsService DnsService

@if(!User.Identity.IsAuthenticated)
{
    <abp-alert alert-type="Danger" >@L["NotAuthenticatedMessage"]</abp-alert>
}
else if (await FeatureChecker.IsEnabledAsync("Dns.Cloudflare") == false)
{
    <abp-alert alert-type="Info" >@L["NotEnabledMessage"]</abp-alert>

}
else
{
    <abp-table hoverable-rows="true" responsive-sm="true">
        <thead>
        <tr>
            <th scope="Column">#</th>
            <th scope="Column">Tenant Id</th>
            <th scope="Column">Zone Id</th>
            <th scope="Column">Actions</th>
        </tr>
        
        </thead>
        <tbody>
            @foreach (var credential in DnsService.GetCredentialsAsync().Result.Select((value, index) => new { value, index }))
            {
                <tr scope="row">
                    <td class="align-middle">@(credential.index + 1)</td>
                    @if(credential.value.TenantId != null)
                    {
                        <td class="align-middle">@credential.value.TenantId </td>
                    }
                    else
                    {
                        <td class="align-middle">N/A</td>
                    }
                    <td class="align-middle">@credential.value.ZoneId</td>
                    <td>
                        <a href="/Cloudflare/Dns" class="btn btn-link">Show Dns</a>
                    </td>
                </tr>
            }
        </tbody>
    </abp-table>
    
}



